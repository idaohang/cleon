///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V5.52.1.50724/W32 for MSP430      26/May/2013  01:02:24 /
// Copyright 1996-2013 IAR Systems AB.                                        /
//                                                                            /
//    __rt_version  =  3                                                      /
//    __double_size =  64                                                     /
//    __reg_r4      =  free                                                   /
//    __reg_r5      =  free                                                   /
//    __pic         =  no                                                     /
//    __core        =  430X                                                   /
//    __data_model  =  large                                                  /
//    Source file   =  C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  /
//                     2013\2_cleon\4. Development\1.                         /
//                     Software\cleon\hal\hal_rtc.c                           /
//    Command line  =  "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\hal\hal_rtc.c" -lC                      /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\Debug\List\" -la                        /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\Debug\List\" -o                         /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\Debug\Obj\" --no_cse --no_unroll        /
//                     --no_inline --no_code_motion --no_tbaa --debug         /
//                     -D__MSP430F5338__ -e --double=64 --dlib_config         /
//                     "C:\Program Files (x86)\IAR Systems\Embedded           /
//                     Workbench 6.5\430\LIB\DLIB\dl430xldn.h" -I             /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\intro\" -I "C:\Users\woosuk\Dropbox\lws /
//                     \ESL\3. Research\9. Summer 2013\2_cleon\4.             /
//                     Development\1. Software\cleon\sys\" -I                 /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\hal\" -I "C:\Users\woosuk\Dropbox\lws\E /
//                     SL\3. Research\9. Summer 2013\2_cleon\4.               /
//                     Development\1. Software\cleon\hal\rtclib\" -I          /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\platform\" -I                           /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\fs\" -I "C:\Users\woosuk\Dropbox\lws\ES /
//                     L\3. Research\9. Summer 2013\2_cleon\4.                /
//                     Development\1. Software\cleon\fs\FatFs\" -I            /
//                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.        /
//                     Summer 2013\2_cleon\4. Development\1.                  /
//                     Software\cleon\app\" -I "C:\Users\woosuk\Dropbox\lws\E /
//                     SL\3. Research\9. Summer 2013\2_cleon\4.               /
//                     Development\1. Software\cleon\" --core=430X            /
//                     --data_model=large -On --multiplier=32                 /
//                     --multiplier_location=4C0 --hw_workaround=CPU40        /
//    List file     =  C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  /
//                     2013\2_cleon\4. Development\1.                         /
//                     Software\cleon\Debug\List\hal_rtc.s43                  /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME hal_rtc

        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__core", "430X"
        RTMODEL "__data_model", "large"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__dlib_full_locale_support", "0"
        RTMODEL "__double_size", "64"
        RTMODEL "__pic", "no"
        RTMODEL "__reg_r4", "free"
        RTMODEL "__reg_r5", "free"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:SORT:NOROOT(0)

        EXTERN ?DivMod32u
        EXTERN ?DivMod8u
        EXTERN _Mul64i
        EXTERN ?cstart_init_zero20
        EXTERN ?longjmp_r4
        EXTERN ?longjmp_r5
        EXTERN ?setjmp_r4
        EXTERN ?setjmp_r5

        PUBWEAK `??RTC_VECTOR_ISR??INTVEC 84`
        PUBWEAK ?setjmp_save_r4
        PUBWEAK ?setjmp_save_r5
        PUBLIC HAL_GetRTCDay
        FUNCTION HAL_GetRTCDay,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_GetRTCDow
        FUNCTION HAL_GetRTCDow,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_GetRTCHour
        FUNCTION HAL_GetRTCHour,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_GetRTCMilisec
        FUNCTION HAL_GetRTCMilisec,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        PUBLIC HAL_GetRTCMin
        FUNCTION HAL_GetRTCMin,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_GetRTCMon
        FUNCTION HAL_GetRTCMon,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_GetRTCSec
        FUNCTION HAL_GetRTCSec,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_GetRTCYear
        FUNCTION HAL_GetRTCYear,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_RTC_GetSecondConvertedFromStoredRTCTime
        FUNCTION HAL_RTC_GetSecondConvertedFromStoredRTCTime,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        PUBLIC HAL_RTC_Init
        FUNCTION HAL_RTC_Init,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_RTC_ReadRTCTime
        FUNCTION HAL_RTC_ReadRTCTime,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_RTC_RestoreTimeTick
        FUNCTION HAL_RTC_RestoreTimeTick,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 52, STACK
        PUBLIC HAL_SetRTCDay
        FUNCTION HAL_SetRTCDay,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_SetRTCDow
        FUNCTION HAL_SetRTCDow,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_SetRTCHour
        FUNCTION HAL_SetRTCHour,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_SetRTCMilisec
        FUNCTION HAL_SetRTCMilisec,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        PUBLIC HAL_SetRTCMin
        FUNCTION HAL_SetRTCMin,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_SetRTCMon
        FUNCTION HAL_SetRTCMon,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_SetRTCSec
        FUNCTION HAL_SetRTCSec,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBLIC HAL_SetRTCYear
        FUNCTION HAL_SetRTCYear,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        PUBWEAK RTCIV
        PUBLIC RTC_VECTOR_ISR
        FUNCTION RTC_VECTOR_ISR,0233H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 28, STACK
        PUBWEAK _A_BAKCTL_L
        PUBWEAK _A_PEOUT_L
        PUBWEAK _A_RTCCTL01_L
        PUBWEAK _A_RTCDATE_L
        PUBWEAK _A_RTCTIM0_L
        PUBWEAK _A_RTCTIM1_L
        PUBWEAK _A_RTCYEAR_L
        PUBLIC bFLAG_ISResetOccuredBySVSHPOR
        PUBLIC bFLAG_IsTimeSynced
        PUBLIC bFLAG_RTCTimeTickOfSecond
        PUBLIC stTimeMeasurement
        PUBLIC ucRTCNumberOfSecondCounter
        PUBLIC uniMillisecondTimeTick
        PUBLIC uniRTCTime
        PUBLIC uniSecondTimeTick
        
          CFI Names cfiNames0
          CFI StackFrame CFA SP DATA
          CFI Resource PC:20, SP:20, SR:16, R4L:16, R4H:4, R4:20, R5L:16, R5H:4
          CFI Resource R5:20, R6L:16, R6H:4, R6:20, R7L:16, R7H:4, R7:20, R8L:16
          CFI Resource R8H:4, R8:20, R9L:16, R9H:4, R9:20, R10L:16, R10H:4
          CFI Resource R10:20, R11L:16, R11H:4, R11:20, R12L:16, R12H:4, R12:20
          CFI Resource R13L:16, R13H:4, R13:20, R14L:16, R14H:4, R14:20, R15L:16
          CFI Resource R15H:4, R15:20
          CFI ResourceParts R4 R4H, R4L
          CFI ResourceParts R5 R5H, R5L
          CFI ResourceParts R6 R6H, R6L
          CFI ResourceParts R7 R7H, R7L
          CFI ResourceParts R8 R8H, R8L
          CFI ResourceParts R9 R9H, R9L
          CFI ResourceParts R10 R10H, R10L
          CFI ResourceParts R11 R11H, R11L
          CFI ResourceParts R12 R12H, R12L
          CFI ResourceParts R13 R13H, R13L
          CFI ResourceParts R14 R14H, R14L
          CFI ResourceParts R15 R15H, R15L
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC Frame(CFA, -4)
          CFI SR Undefined
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L Undefined
          CFI R12H Undefined
          CFI R12 Undefined
          CFI R13L Undefined
          CFI R13H Undefined
          CFI R13 Undefined
          CFI R14L Undefined
          CFI R14H Undefined
          CFI R14 Undefined
          CFI R15L Undefined
          CFI R15H Undefined
          CFI R15 Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 2
          CFI DataAlign 2
          CFI ReturnAddress PC CODE
          CFI CFA SP+4
          CFI PC or(load(2, DATA, add(CFA, literal(-2))), lshift(and(load(2, DATA, add(CFA, literal(-4))), 61440), 4))
          CFI SR Frame(CFA, -4)
          CFI R4L SameValue
          CFI R4H SameValue
          CFI R4 Concat
          CFI R5L SameValue
          CFI R5H SameValue
          CFI R5 Concat
          CFI R6L SameValue
          CFI R6H SameValue
          CFI R6 Concat
          CFI R7L SameValue
          CFI R7H SameValue
          CFI R7 Concat
          CFI R8L SameValue
          CFI R8H SameValue
          CFI R8 Concat
          CFI R9L SameValue
          CFI R9H SameValue
          CFI R9 Concat
          CFI R10L SameValue
          CFI R10H SameValue
          CFI R10 Concat
          CFI R11L SameValue
          CFI R11H SameValue
          CFI R11 Concat
          CFI R12L SameValue
          CFI R12H SameValue
          CFI R12 Concat
          CFI R13L SameValue
          CFI R13H SameValue
          CFI R13 Concat
          CFI R14L SameValue
          CFI R14H SameValue
          CFI R14 Concat
          CFI R15L SameValue
          CFI R15H SameValue
          CFI R15 Concat
          CFI EndCommon cfiCommon1
        
RTC_VECTOR_ISR      SYMBOL "RTC_VECTOR_ISR"
`??RTC_VECTOR_ISR??INTVEC 84` SYMBOL "??INTVEC 84", RTC_VECTOR_ISR

        EXTERN _Div64u
        FUNCTION _Div64u,0202H
        EXTERN bFLAG_ISLoggingRequested
        EXTERN ulSampleCount
        EXTERN ulSampleGap
        EXTERN bFLAG_CLEONSampleIntervalConuter
        EXTERN memcpy
        FUNCTION memcpy,010202H
        EXTERN SysRstIv


        ASEGN DATA16_AN:DATA:NOROOT,049cH
// union <unnamed> __data16 _A_BAKCTL_L
_A_BAKCTL_L:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,0282H
// union <unnamed> __data16 _A_PEOUT_L
_A_PEOUT_L:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,04a0H
// union <unnamed> __data16 _A_RTCCTL01_L
_A_RTCCTL01_L:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,04aeH
// unsigned short volatile __data16 RTCIV
RTCIV:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,04b0H
// union <unnamed> __data16 _A_RTCTIM0_L
_A_RTCTIM0_L:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,04b2H
// union <unnamed> __data16 _A_RTCTIM1_L
_A_RTCTIM1_L:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,04b4H
// union <unnamed> __data16 _A_RTCDATE_L
_A_RTCDATE_L:
        DS8 2

        ASEGN DATA16_AN:DATA:NOROOT,04b6H
// union <unnamed> __data16 _A_RTCYEAR_L
_A_RTCYEAR_L:
        DS8 2

        RSEG DATA20_Z:DATA:SORT:NOROOT(0)
        REQUIRE ?cstart_init_zero20
bFLAG_IsTimeSynced:
        DS8 1

        RSEG DATA20_Z:DATA:SORT:NOROOT(0)
        REQUIRE ?cstart_init_zero20
bFLAG_RTCTimeTickOfSecond:
        DS8 1

        RSEG DATA20_Z:DATA:SORT:NOROOT(0)
        REQUIRE ?cstart_init_zero20
bFLAG_ISResetOccuredBySVSHPOR:
        DS8 1

        RSEG DATA20_Z:DATA:SORT:NOROOT(1)
        REQUIRE ?cstart_init_zero20
uniRTCTime:
        DS8 8

        RSEG DATA20_Z:DATA:SORT:NOROOT(1)
        REQUIRE ?cstart_init_zero20
uniMillisecondTimeTick:
        DS8 8

        RSEG DATA20_Z:DATA:SORT:NOROOT(1)
        REQUIRE ?cstart_init_zero20
uniSecondTimeTick:
        DS8 8

        RSEG DATA20_Z:DATA:SORT:NOROOT(0)
        REQUIRE ?cstart_init_zero20
ucRTCNumberOfSecondCounter:
        DS8 1

        RSEG DATA20_Z:DATA:SORT:NOROOT(1)
        REQUIRE ?cstart_init_zero20
stTimeMeasurement:
        DS8 320

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_RTC_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function HAL_RTC_Init
        FUNCALL HAL_RTC_Init, HAL_RTC_RestoreTimeTick
        LOCFRAME CSTACK, 4, STACK
        CMPX.W  #0xe, &SysRstIv
        JEQ     ??HAL_RTC_Init_1
        CMPX.W  #0x2, &SysRstIv
        JNE     ??HAL_RTC_Init_2
??HAL_RTC_Init_1:
        BIS.W   #0x10, &0x4a0
        BIC.W   #0x4000, &0x4a0
        CALLA   #HAL_RTC_RestoreTimeTick
        JMP     ??HAL_RTC_Init_0
??HAL_RTC_Init_2:
        BIS.W   #0x4000, &0x4a0
        BIS.W   #0x10, &0x4a0
        MOV.W   #0x7bc, &0x4b6
        MOV.B   #0x1, &0x4b5
        MOV.B   #0x1, &0x4b4
        MOV.B   #0x0, &0x4b2
        MOV.B   #0x0, &0x4b1
        MOV.B   #0x0, &0x4b0
        BIC.W   #0x4000, &0x4a0
        BIC.B   #0x20, &0x282
??HAL_RTC_Init_0:
        BIT.W   #0x1, &0x49c
        JNC     ??HAL_RTC_Init_3
        BIC.W   #0x1, &0x49c
        JMP     ??HAL_RTC_Init_0
??HAL_RTC_Init_3:
        RETA
          CFI EndBlock cfiBlock0
        REQUIRE _A_RTCCTL01_L
        REQUIRE _A_RTCYEAR_L
        REQUIRE _A_RTCDATE_L
        REQUIRE _A_RTCTIM1_L
        REQUIRE _A_RTCTIM0_L
        REQUIRE _A_PEOUT_L
        REQUIRE _A_BAKCTL_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_RTC_ReadRTCTime:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function HAL_RTC_ReadRTCTime
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCYear
        LOCFRAME CSTACK, 4, STACK
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCMon
        LOCFRAME CSTACK, 4, STACK
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCDay
        LOCFRAME CSTACK, 4, STACK
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCHour
        LOCFRAME CSTACK, 4, STACK
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCMin
        LOCFRAME CSTACK, 4, STACK
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCSec
        LOCFRAME CSTACK, 4, STACK
        FUNCALL HAL_RTC_ReadRTCTime, HAL_GetRTCMilisec
        LOCFRAME CSTACK, 4, STACK
        CALLA   #HAL_GetRTCYear
        ADD.B   #0x44, R12
        MOVX.B  R12, &uniRTCTime
        CALLA   #HAL_GetRTCMon
        MOVX.B  R12, &uniRTCTime + 1
        CALLA   #HAL_GetRTCDay
        MOVX.B  R12, &uniRTCTime + 2
        CALLA   #HAL_GetRTCHour
        MOVX.B  R12, &uniRTCTime + 3
        CALLA   #HAL_GetRTCMin
        MOVX.B  R12, &uniRTCTime + 4
        CALLA   #HAL_GetRTCSec
        MOVX.B  R12, &uniRTCTime + 5
        CALLA   #HAL_GetRTCMilisec
        MOVX.W  R12, &uniRTCTime + 6
        RETA
          CFI EndBlock cfiBlock1

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_RTC_RestoreTimeTick:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function HAL_RTC_RestoreTimeTick
        FUNCALL HAL_RTC_RestoreTimeTick, memcpy
        LOCFRAME CSTACK, 52, STACK
        FUNCALL HAL_RTC_RestoreTimeTick, memcpy
        LOCFRAME CSTACK, 52, STACK
        FUNCALL HAL_RTC_RestoreTimeTick, HAL_RTC_ReadRTCTime
        LOCFRAME CSTACK, 52, STACK
        FUNCALL HAL_RTC_RestoreTimeTick, HAL_RTC_GetSecondConvertedFromStoredRTCTime
        LOCFRAME CSTACK, 52, STACK
        FUNCALL HAL_RTC_RestoreTimeTick, HAL_RTC_GetSecondConvertedFromStoredRTCTime
        LOCFRAME CSTACK, 52, STACK
        PUSHM.A #0x8, R11
          CFI R4L Frame(CFA, -36)
          CFI R4H Frame(CFA, -34)
          CFI R5L Frame(CFA, -32)
          CFI R5H Frame(CFA, -30)
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+36
        SUB.W   #0x10, SP
          CFI CFA SP+52
        MOV.W   #0x0, R4
        MOV.W   #0x0, R5
        MOV.W   #0x0, R6
        MOV.W   #0x0, R7
        MOV.W   #0x8, R14
        MOV.W   #0x0, R15
        MOVA    #0x38000, R13
        MOV.W   SP, R12
        ADD.W   #0x8, R12
        CALLA   #memcpy
        MOV.W   #0x8, R14
        MOV.W   #0x0, R15
        MOVA    #0x38008, R13
        MOV.W   SP, R12
        ADD.W   #0x0, R12
        CALLA   #memcpy
        CALLA   #HAL_RTC_ReadRTCTime
        CMPX.B  #0x20, &uniRTCTime
        JC      ??HAL_RTC_RestoreTimeTick_0
        BIC.B   #0x20, &0x282
        JMP     ??HAL_RTC_RestoreTimeTick_1
??HAL_RTC_RestoreTimeTick_0:
        MOVA    #uniRTCTime, R12
        CALLA   #HAL_RTC_GetSecondConvertedFromStoredRTCTime
        MOV.W   R12, R8
        MOV.W   R13, R9
        MOV.W   R14, R10
        MOV.W   R15, R11
        MOV.W   SP, R12
        ADD.W   #0x8, R12
        CALLA   #HAL_RTC_GetSecondConvertedFromStoredRTCTime
        SUB.W   R12, R8
        SUBC.W  R13, R9
        SUBC.W  R14, R10
        SUBC.W  R15, R11
        MOV.W   R8, R4
        MOV.W   R9, R5
        MOV.W   R10, R6
        MOV.W   R11, R7
        MOV.W   R4, R12
        MOV.W   R5, R13
        MOV.W   R6, R14
        MOV.W   R7, R15
        MOV.W   #0x9680, R8
        MOV.W   #0x98, R9
        MOV.W   #0x0, R10
        MOV.W   #0x0, R11
        CALLA   #_Mul64i
        ADD.W   @SP, R12
        ADDC.W  0x2(SP), R13
        ADDC.W  0x4(SP), R14
        ADDC.W  0x6(SP), R15
        MOVX.W  R12, &uniSecondTimeTick
        MOVX.W  R13, &uniSecondTimeTick + 2
        MOVX.W  R14, &uniSecondTimeTick + 4
        MOVX.W  R15, &uniSecondTimeTick + 6
        MOVX.B  #0x1, &bFLAG_IsTimeSynced
        BIS.B   #0x20, &0x282
??HAL_RTC_RestoreTimeTick_1:
        ADD.W   #0x10, SP
          CFI CFA SP+36
        POPM.A  #0x8, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R4H SameValue
          CFI R5H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R4L SameValue
          CFI R5L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock2
        REQUIRE _A_PEOUT_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_RTC_GetSecondConvertedFromStoredRTCTime:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function HAL_RTC_GetSecondConvertedFromStoredRTCTime
        PUSHM.A #0x6, R11
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+28
        MOVA    R12, R6
        MOV.W   #0x0, R8
        MOV.W   #0x0, R9
        MOV.W   #0x0, R10
        MOV.W   #0x0, R11
        MOV.B   #0x0, R7
        MOV.B   @R6, R12
        MOV.B   #0x4, R14
        CALLA   #?DivMod8u
        CMP.B   #0x0, R14
        JNE     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_2
        MOV.B   #0x1, R7
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_2:
        MOV.B   @R6, R12
        MOV.B   R12, R12
        ADD.W   #0xffff, R12
        RPT     #0x7
        RLAX.W  R12
        MOV.W   R12, R15
        RLA.W   R12
        ADD.W   R12, R15
        RLA.W   R12
        ADD.W   R12, R15
        RLAM.W  #0x3, R12
        ADD.W   R12, R15
        RLA.W   R12
        ADD.W   R15, R12
        MOV.W   R12, R13
        XOR.W   #0xffff, R13
        RLA.W   R13
        SUBC.W  R13, R13
        MOV.W   R13, R14
        XOR.W   #0xffff, R14
        RLA.W   R14
        SUBC.W  R14, R14
        MOV.W   R14, R15
        ADD.W   R12, R8
        ADDC.W  R13, R9
        ADDC.W  R14, R10
        ADDC.W  R15, R11
        MOV.B   @R6, R12
        MOV.B   #0x4, R14
        CALLA   #?DivMod8u
        MOV.B   R12, R12
        MOV.W   #0x0, R13
        MOV.W   #0x0, R14
        MOV.W   #0x0, R15
        ADD.W   R12, R8
        ADDC.W  R13, R9
        ADDC.W  R14, R10
        ADDC.W  R15, R11
        MOV.B   0x1(R6), R14
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_3
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_4
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_5
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_6
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_7
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_8
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_9
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_10
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_11
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_12
        SUB.B   #0x1, R14
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_13
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_3:
        ADD.W   #0xde80, R8
        ADDC.W  #0x28, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_4:
        ADD.W   #0xc880, R8
        ADDC.W  #0x4d, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_5:
        ADD.W   #0xa700, R8
        ADDC.W  #0x76, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_6:
        ADD.W   #0x3400, R8
        ADDC.W  #0x9e, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_7:
        ADD.W   #0x1280, R8
        ADDC.W  #0xc7, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_8:
        ADD.W   #0x9f80, R8
        ADDC.W  #0xee, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_9:
        ADD.W   #0x7e00, R8
        ADDC.W  #0x117, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_10:
        ADD.W   #0x5c80, R8
        ADDC.W  #0x140, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_11:
        ADD.W   #0xe980, R8
        ADDC.W  #0x167, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_12:
        ADD.W   #0xc800, R8
        ADDC.W  #0x190, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
        JMP     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_13:
        ADD.W   #0x5500, R8
        ADDC.W  #0x1b8, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_0:
        CMP.B   #0x0, R7
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_14
        CMP.B   #0x1, 0x1(R6)
        JEQ     ??HAL_RTC_GetSecondConvertedFromStoredRTCTime_14
        ADD.W   #0x5180, R8
        ADDC.W  #0x1, R9
        ADDC.W  #0x0, R10
        ADDC.W  #0x0, R11
??HAL_RTC_GetSecondConvertedFromStoredRTCTime_14:
        MOV.B   0x2(R6), R12
        MOV.B   R12, R12
        ADD.W   #0xffff, R12
        RPT     #0x7
        RLAX.W  R12
        MOV.W   R12, R15
        RLA.W   R12
        ADD.W   R12, R15
        RLAM.W  #0x4, R12
        ADD.W   R12, R15
        RLAM.W  #0x2, R12
        ADD.W   R15, R12
        MOV.W   R12, R13
        XOR.W   #0xffff, R13
        RLA.W   R13
        SUBC.W  R13, R13
        MOV.W   R13, R14
        XOR.W   #0xffff, R14
        RLA.W   R14
        SUBC.W  R14, R14
        MOV.W   R14, R15
        ADD.W   R12, R8
        ADDC.W  R13, R9
        ADDC.W  R14, R10
        ADDC.W  R15, R11
        MOV.B   0x3(R6), R12
        MOV.B   R12, R12
        ADD.W   #0xffff, R12
        RLAM.W  #0x4, R12
        MOV.W   R12, R15
        RPT     #0x5
        RLAX.W  R12
        ADD.W   R12, R15
        RLA.W   R12
        ADD.W   R12, R15
        RLA.W   R12
        ADD.W   R15, R12
        MOV.W   R12, R13
        XOR.W   #0xffff, R13
        RLA.W   R13
        SUBC.W  R13, R13
        MOV.W   R13, R14
        XOR.W   #0xffff, R14
        RLA.W   R14
        SUBC.W  R14, R14
        MOV.W   R14, R15
        ADD.W   R12, R8
        ADDC.W  R13, R9
        ADDC.W  R14, R10
        ADDC.W  R15, R11
        MOV.B   0x4(R6), R12
        MOV.B   R12, R12
        ADD.W   #0xffff, R12
        RLAM.W  #0x2, R12
        MOV.W   R12, R15
        RLA.W   R12
        ADD.W   R12, R15
        RLA.W   R12
        ADD.W   R12, R15
        RLA.W   R12
        ADD.W   R15, R12
        MOV.W   R12, R13
        XOR.W   #0xffff, R13
        RLA.W   R13
        SUBC.W  R13, R13
        MOV.W   R13, R14
        XOR.W   #0xffff, R14
        RLA.W   R14
        SUBC.W  R14, R14
        MOV.W   R14, R15
        ADD.W   R12, R8
        ADDC.W  R13, R9
        ADDC.W  R14, R10
        ADDC.W  R15, R11
        MOV.B   0x5(R6), R12
        MOV.B   R12, R12
        MOV.W   #0x0, R13
        MOV.W   #0x0, R14
        MOV.W   #0x0, R15
        ADD.W   R12, R8
        ADDC.W  R13, R9
        ADDC.W  R14, R10
        ADDC.W  R15, R11
        MOV.W   R8, R12
        MOV.W   R9, R13
        MOV.W   R10, R14
        MOV.W   R11, R15
        POPM.A  #0x6, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock3

        RSEG ISR_CODE:CODE:REORDER:NOROOT(1)
RTC_VECTOR_ISR:
          CFI Block cfiBlock4 Using cfiCommon1
          CFI Function RTC_VECTOR_ISR
        PUSHM.A #0x6, R15
          CFI R10L Frame(CFA, -28)
          CFI R10H Frame(CFA, -26)
          CFI R11L Frame(CFA, -24)
          CFI R11H Frame(CFA, -22)
          CFI R12L Frame(CFA, -20)
          CFI R12H Frame(CFA, -18)
          CFI R13L Frame(CFA, -16)
          CFI R13H Frame(CFA, -14)
          CFI R14L Frame(CFA, -12)
          CFI R14H Frame(CFA, -10)
          CFI R15L Frame(CFA, -8)
          CFI R15H Frame(CFA, -6)
          CFI CFA SP+28
        MOV.W   &0x4ae, R15
        ADDA    R15, PC
`?<Jumptable for RTC_VECTOR_ISR>_0`:
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_5
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_2
        JMP     ??RTC_VECTOR_ISR_2
??RTC_VECTOR_ISR_5:
        MOVX.B  #0x1, &bFLAG_RTCTimeTickOfSecond
        MOVX.W  #0x0, &uniMillisecondTimeTick
        MOVX.W  #0x0, &uniMillisecondTimeTick + 2
        MOVX.W  #0x0, &uniMillisecondTimeTick + 4
        MOVX.W  #0x0, &uniMillisecondTimeTick + 6
        ADDX.W  #0x9680, &uniSecondTimeTick
        ADDCX.W #0x98, &uniSecondTimeTick + 2
        ADDCX.W #0x0, &uniSecondTimeTick + 4
        ADDCX.W #0x0, &uniSecondTimeTick + 6
        CMPX.B  #0x0, &bFLAG_ISLoggingRequested
        JEQ     ??RTC_VECTOR_ISR_2
        CMPX.W  #0x1, &ulSampleCount
        JNE     ??RTC_VECTOR_ISR_3
        CMPX.W  #0x0, &ulSampleCount + 2
        JEQ     ??RTC_VECTOR_ISR_2
??RTC_VECTOR_ISR_3:
        MOVX.B  &ucRTCNumberOfSecondCounter, R10
        MOV.B   R10, R10
        MOV.W   #0x0, R11
        MOVX.W  &ulSampleGap, R12
        MOVX.W  &ulSampleGap + 2, R13
        MOV.W   #0x3e8, R14
        MOV.W   #0x0, R15
        CALLA   #?DivMod32u
        ADD.W   #0xffff, R12
        ADDC.W  #0xffff, R13
        CMP.W   R12, R10
        JNE     ??RTC_VECTOR_ISR_4
        CMP.W   R13, R11
        JNE     ??RTC_VECTOR_ISR_4
        MOVX.B  #0x0, &ucRTCNumberOfSecondCounter
        MOVX.B  #0x1, &bFLAG_CLEONSampleIntervalConuter
        BIC.W   #0xf0, 0x18(SP)
        JMP     ??RTC_VECTOR_ISR_2
??RTC_VECTOR_ISR_4:
        CMPX.B  #0x0, &bFLAG_ISLoggingRequested
        JEQ     ??RTC_VECTOR_ISR_2
        ADDX.B  #0x1, &ucRTCNumberOfSecondCounter
??RTC_VECTOR_ISR_2:
        POPM.A  #0x6, R15
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R12H SameValue
          CFI R13H SameValue
          CFI R14H SameValue
          CFI R15H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R12L SameValue
          CFI R13L SameValue
          CFI R14L SameValue
          CFI R15L SameValue
          CFI CFA SP+4
        RETI
          CFI EndBlock cfiBlock4
        REQUIRE RTCIV

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCYear:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function HAL_SetRTCYear
        MOV.W   R12, &0x4b6
        RETA
          CFI EndBlock cfiBlock5
        REQUIRE _A_RTCYEAR_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCMon:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function HAL_SetRTCMon
        MOV.B   R12, &0x4b5
        RETA
          CFI EndBlock cfiBlock6
        REQUIRE _A_RTCDATE_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCDay:
          CFI Block cfiBlock7 Using cfiCommon0
          CFI Function HAL_SetRTCDay
        MOV.B   R12, &0x4b4
        RETA
          CFI EndBlock cfiBlock7
        REQUIRE _A_RTCDATE_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCDow:
          CFI Block cfiBlock8 Using cfiCommon0
          CFI Function HAL_SetRTCDow
        MOV.B   R12, &0x4b3
        RETA
          CFI EndBlock cfiBlock8
        REQUIRE _A_RTCTIM1_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCHour:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function HAL_SetRTCHour
        MOV.B   R12, &0x4b2
        RETA
          CFI EndBlock cfiBlock9
        REQUIRE _A_RTCTIM1_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCMin:
          CFI Block cfiBlock10 Using cfiCommon0
          CFI Function HAL_SetRTCMin
        MOV.B   R12, &0x4b1
        RETA
          CFI EndBlock cfiBlock10
        REQUIRE _A_RTCTIM0_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCSec:
          CFI Block cfiBlock11 Using cfiCommon0
          CFI Function HAL_SetRTCSec
        MOV.B   R12, &0x4b0
        RETA
          CFI EndBlock cfiBlock11
        REQUIRE _A_RTCTIM0_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_SetRTCMilisec:
          CFI Block cfiBlock12 Using cfiCommon0
          CFI Function HAL_SetRTCMilisec
        FUNCALL HAL_SetRTCMilisec, _Div64u
        LOCFRAME CSTACK, 28, STACK
        PUSHM.A #0x6, R11
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+28
        MOV.W   R12, R6
        MOV.W   #0x2710, R8
        MOV.W   #0x0, R9
        MOV.W   #0x0, R10
        MOV.W   #0x0, R11
        MOVA    #uniMillisecondTimeTick, R15
        MOV.W   @R15+, R12
        MOV.W   @R15+, R13
        MOV.W   @R15+, R14
        MOV.W   @R15+, R15
        CALLA   #_Div64u
        MOVX.W  R12, &uniRTCTime + 6
        MOVX.W  &uniRTCTime + 6, R12
        POPM.A  #0x6, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock12

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCYear:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function HAL_GetRTCYear
        MOV.W   &0x4b6, R12
        RETA
          CFI EndBlock cfiBlock13
        REQUIRE _A_RTCYEAR_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCMon:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function HAL_GetRTCMon
        MOV.B   &0x4b5, R12
        MOV.B   R12, R12
        RETA
          CFI EndBlock cfiBlock14
        REQUIRE _A_RTCDATE_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCDow:
          CFI Block cfiBlock15 Using cfiCommon0
          CFI Function HAL_GetRTCDow
        MOV.B   &0x4b3, R12
        MOV.B   R12, R12
        RETA
          CFI EndBlock cfiBlock15
        REQUIRE _A_RTCTIM1_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCDay:
          CFI Block cfiBlock16 Using cfiCommon0
          CFI Function HAL_GetRTCDay
        MOV.B   &0x4b4, R12
        MOV.B   R12, R12
        RETA
          CFI EndBlock cfiBlock16
        REQUIRE _A_RTCDATE_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCHour:
          CFI Block cfiBlock17 Using cfiCommon0
          CFI Function HAL_GetRTCHour
        MOV.B   &0x4b2, R12
        MOV.B   R12, R12
        RETA
          CFI EndBlock cfiBlock17
        REQUIRE _A_RTCTIM1_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCMin:
          CFI Block cfiBlock18 Using cfiCommon0
          CFI Function HAL_GetRTCMin
        MOV.B   &0x4b1, R12
        MOV.B   R12, R12
        RETA
          CFI EndBlock cfiBlock18
        REQUIRE _A_RTCTIM0_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCSec:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function HAL_GetRTCSec
        MOV.B   &0x4b0, R12
        MOV.B   R12, R12
        RETA
          CFI EndBlock cfiBlock19
        REQUIRE _A_RTCTIM0_L

        RSEG CODE:CODE:REORDER:NOROOT(1)
HAL_GetRTCMilisec:
          CFI Block cfiBlock20 Using cfiCommon0
          CFI Function HAL_GetRTCMilisec
        FUNCALL HAL_GetRTCMilisec, _Div64u
        LOCFRAME CSTACK, 28, STACK
        PUSHM.A #0x6, R11
          CFI R6L Frame(CFA, -28)
          CFI R6H Frame(CFA, -26)
          CFI R7L Frame(CFA, -24)
          CFI R7H Frame(CFA, -22)
          CFI R8L Frame(CFA, -20)
          CFI R8H Frame(CFA, -18)
          CFI R9L Frame(CFA, -16)
          CFI R9H Frame(CFA, -14)
          CFI R10L Frame(CFA, -12)
          CFI R10H Frame(CFA, -10)
          CFI R11L Frame(CFA, -8)
          CFI R11H Frame(CFA, -6)
          CFI CFA SP+28
        MOV.W   #0x0, R6
        MOV.W   #0x2710, R8
        MOV.W   #0x0, R9
        MOV.W   #0x0, R10
        MOV.W   #0x0, R11
        MOVA    #uniMillisecondTimeTick, R15
        MOV.W   @R15+, R12
        MOV.W   @R15+, R13
        MOV.W   @R15+, R14
        MOV.W   @R15+, R15
        CALLA   #_Div64u
        MOV.W   R12, R6
        CMP.W   #0x3e8, R6
        JNC     ??HAL_GetRTCMilisec_0
        MOV.W   #0x0, R6
??HAL_GetRTCMilisec_0:
        MOV.W   R6, R12
        POPM.A  #0x6, R11
          CFI R10H SameValue
          CFI R11H SameValue
          CFI R6H SameValue
          CFI R7H SameValue
          CFI R8H SameValue
          CFI R9H SameValue
          CFI R10L SameValue
          CFI R11L SameValue
          CFI R6L SameValue
          CFI R7L SameValue
          CFI R8L SameValue
          CFI R9L SameValue
          CFI CFA SP+4
        RETA
          CFI EndBlock cfiBlock20

        COMMON INTVEC:CONST:ROOT(1)
        ORG 84
`??RTC_VECTOR_ISR??INTVEC 84`:
        DC16    RTC_VECTOR_ISR

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r4:
        REQUIRE ?setjmp_r4
        REQUIRE ?longjmp_r4

        RSEG CODE:CODE:REORDER:NOROOT(1)
?setjmp_save_r5:
        REQUIRE ?setjmp_r5
        REQUIRE ?longjmp_r5

        END
// 
// 1 072 bytes in segment CODE
//    16 bytes in segment DATA16_AN
//   348 bytes in segment DATA20_Z
//     2 bytes in segment INTVEC
//   190 bytes in segment ISR_CODE
// 
// 1 262 bytes of CODE  memory
//     0 bytes of CONST memory (+  2 bytes shared)
//   348 bytes of DATA  memory (+ 16 bytes shared)
//
//Errors: none
//Warnings: none
