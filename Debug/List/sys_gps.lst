###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.52.1.50724/W32 for MSP430       26/May/2013  01:02:17 #
# Copyright 1996-2013 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  64                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430X                                                    #
#    __data_model  =  large                                                   #
#    Source file   =  C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer   #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\sys\sys_gps.c                            #
#    Command line  =  "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\sys\sys_gps.c" -lC                       #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\Debug\List\" -la                         #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\Debug\List\" -o                          #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\Debug\Obj\" --no_cse --no_unroll         #
#                     --no_inline --no_code_motion --no_tbaa --debug          #
#                     -D__MSP430F5338__ -e --double=64 --dlib_config          #
#                     "C:\Program Files (x86)\IAR Systems\Embedded Workbench  #
#                     6.5\430\LIB\DLIB\dl430xldn.h" -I                        #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1. Software\cleon\intro\"   #
#                     -I "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9.      #
#                     Summer 2013\2_cleon\4. Development\1.                   #
#                     Software\cleon\sys\" -I "C:\Users\woosuk\Dropbox\lws\ES #
#                     L\3. Research\9. Summer 2013\2_cleon\4. Development\1.  #
#                     Software\cleon\hal\" -I "C:\Users\woosuk\Dropbox\lws\ES #
#                     L\3. Research\9. Summer 2013\2_cleon\4. Development\1.  #
#                     Software\cleon\hal\rtclib\" -I                          #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\platform\" -I                            #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1. Software\cleon\fs\" -I   #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\fs\FatFs\" -I                            #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1. Software\cleon\app\" -I  #
#                     "C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer  #
#                     2013\2_cleon\4. Development\1. Software\cleon\"         #
#                     --core=430X --data_model=large -On --multiplier=32      #
#                     --multiplier_location=4C0 --hw_workaround=CPU40         #
#    List file     =  C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer   #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\Debug\List\sys_gps.lst                   #
#    Object file   =  C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer   #
#                     2013\2_cleon\4. Development\1.                          #
#                     Software\cleon\Debug\Obj\sys_gps.r43                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\woosuk\Dropbox\lws\ESL\3. Research\9. Summer 2013\2_cleon\4. Development\1. Software\cleon\sys\sys_gps.c
      1          /**
      2          @file       sys_gps.c
      3          
      4          @brief      GPS related functions
      5          */
      6          
      7          #include "cleon_conf.h"
      8          #include "app_define.h"
      9          #include "sys_define.h"

   \                                 In  segment DATA16_AN, at 0x510
   \   union <unnamed> __data16 _A_DMA0CTL_L
   \                     _A_DMA0CTL_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> __data16 _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> __data16 _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> __data16 _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> __data16 _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> __data16 _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> __data16 _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x282
   \   union <unnamed> __data16 _A_PEOUT_L
   \                     _A_PEOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x284
   \   union <unnamed> __data16 _A_PEDIR_L
   \                     _A_PEDIR_L:
   \   000000                DS8 2
     10          #include "hal_define.h"
     11          #include "fs_define.h"
     12          
     13          // CLEON data structure
     14          extern cleon_header_u      uniCLEONHeader;
     15          extern cleon_gps_data_u    uniCLEONGPSData;
     16          extern cleon_sensor_data_u uniCLEONSensorData;
     17          
     18          // Flags
     19          extern bool bFLAG_DMATransferCompleted;
     20          
     21          /*----------------------------------------------------------------------------*/
     22          /**
     23          @brief    Initializing GPS
     24          
     25          @return   void 
     26          
     27          @param    void
     28          */

   \                                 In  segment CODE, align 2
     29          void SYS_GPS_Init(void)
   \                     SYS_GPS_Init:
     30          {
     31              // Initializing GPS control pins    
     32              SYS_GPS_InitControlIO();
   \   000000   ........     CALLA   #SYS_GPS_InitControlIO
     33              
     34              // Stop GPS operation before initialization
     35              SYS_GPS_StopOperation();
   \   000004   ........     CALLA   #SYS_GPS_StopOperation
     36              
     37              // Program the GPS with pre-configured mode
     38              SYS_GPS_InitProgramIO();
   \   000008   ........     CALLA   #SYS_GPS_InitProgramIO
     39              
     40              // Initializing GPS data pins
     41              SYS_GPS_InitDataIO();
   \   00000C   ........     BRA     #SYS_GPS_InitDataIO
     42              
     43          #if GPS_TEST_ON_INITIALIZATION == _ENABLE_    
     44              // Check if GPS is functional by sampling a chunk of GPS signal and take a look inside
     45              for(int i = 1 ; i < MAX_NUMBER_OF_GPS_TEST_COUNT; i++){
     46                  // If fail, allow more time to settle (100ms, 200ms, 300ms ...)
     47                  if(SYS_GPS_TestGPS(100 * i) == _SUCCESS_){
     48                      // Return if it passes GPS test
     49                      return;
     50                  }
     51              }
     52              
     53              // If it fails the test, turn LED on
     54              GPS_ERROR_LED_ON();
     55          #endif    
     56          }
     57          
     58          /*----------------------------------------------------------------------------*/
     59          /**
     60          @brief    Initializing GPS data pins
     61          
     62          @return   void 
     63          
     64          @param    void
     65          */

   \                                 In  segment CODE, align 2
     66          void SYS_GPS_InitDataIO(void)
   \                     SYS_GPS_InitDataIO:
     67          {
     68              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_1_PIN);      
   \   000000   D2C32202     BIC.B   #0x1, &0x222
     69              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_2_PIN);      
   \   000004   E2C32202     BIC.B   #0x2, &0x222
     70              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_3_PIN);      
   \   000008   E2C22202     BIC.B   #0x4, &0x222
     71              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_4_PIN);      
   \   00000C   F2C22202     BIC.B   #0x8, &0x222
     72              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_5_PIN);      
   \   000010   F2C010002202 BIC.B   #0x10, &0x222
     73              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_6_PIN);      
   \   000016   F2C020002202 BIC.B   #0x20, &0x222
     74              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_7_PIN);      
   \   00001C   F2C040002202 BIC.B   #0x40, &0x222
     75              MAX2769_Q0_PORT(OUT) &= ~BV(MAX2769_Q0_8_PIN);  
   \   000022   F2C080002202 BIC.B   #0x80, &0x222
     76              
     77              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_1_PIN);      
   \   000028   D2C32302     BIC.B   #0x1, &0x223
     78              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_2_PIN);      
   \   00002C   E2C32302     BIC.B   #0x2, &0x223
     79              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_3_PIN);      
   \   000030   E2C22302     BIC.B   #0x4, &0x223
     80              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_4_PIN);      
   \   000034   F2C22302     BIC.B   #0x8, &0x223
     81              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_5_PIN);      
   \   000038   F2C010002302 BIC.B   #0x10, &0x223
     82              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_6_PIN);      
   \   00003E   F2C020002302 BIC.B   #0x20, &0x223
     83              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_7_PIN);      
   \   000044   F2C040002302 BIC.B   #0x40, &0x223
     84              MAX2769_Q1_PORT(OUT) &= ~BV(MAX2769_Q1_8_PIN);      
   \   00004A   F2C080002302 BIC.B   #0x80, &0x223
     85              
     86              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_1_PIN);      
   \   000050   D2C34202     BIC.B   #0x1, &0x242
     87              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_2_PIN);      
   \   000054   E2C34202     BIC.B   #0x2, &0x242
     88              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_3_PIN);      
   \   000058   E2C24202     BIC.B   #0x4, &0x242
     89              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_4_PIN);      
   \   00005C   F2C24202     BIC.B   #0x8, &0x242
     90              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_5_PIN);      
   \   000060   F2C010004202 BIC.B   #0x10, &0x242
     91              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_6_PIN);      
   \   000066   F2C020004202 BIC.B   #0x20, &0x242
     92              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_7_PIN);      
   \   00006C   F2C040004202 BIC.B   #0x40, &0x242
     93              MAX2769_I0_PORT(OUT) &= ~BV(MAX2769_I0_8_PIN);  
   \   000072   F2C080004202 BIC.B   #0x80, &0x242
     94              
     95              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_1_PIN);      
   \   000078   D2C34302     BIC.B   #0x1, &0x243
     96              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_2_PIN);      
   \   00007C   E2C34302     BIC.B   #0x2, &0x243
     97              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_3_PIN);      
   \   000080   E2C24302     BIC.B   #0x4, &0x243
     98              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_4_PIN);      
   \   000084   F2C24302     BIC.B   #0x8, &0x243
     99              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_5_PIN);      
   \   000088   F2C010004302 BIC.B   #0x10, &0x243
    100              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_6_PIN);      
   \   00008E   F2C020004302 BIC.B   #0x20, &0x243
    101              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_7_PIN);      
   \   000094   F2C040004302 BIC.B   #0x40, &0x243
    102              MAX2769_I1_PORT(OUT) &= ~BV(MAX2769_I1_8_PIN);
   \   00009A   F2C080004302 BIC.B   #0x80, &0x243
    103              
    104              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_1_PIN);      
   \   0000A0   D2C32402     BIC.B   #0x1, &0x224
    105              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_2_PIN);      
   \   0000A4   E2C32402     BIC.B   #0x2, &0x224
    106              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_3_PIN);      
   \   0000A8   E2C22402     BIC.B   #0x4, &0x224
    107              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_4_PIN);      
   \   0000AC   F2C22402     BIC.B   #0x8, &0x224
    108              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_5_PIN);      
   \   0000B0   F2C010002402 BIC.B   #0x10, &0x224
    109              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_6_PIN);      
   \   0000B6   F2C020002402 BIC.B   #0x20, &0x224
    110              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_7_PIN);      
   \   0000BC   F2C040002402 BIC.B   #0x40, &0x224
    111              MAX2769_Q0_PORT(DIR) &= ~BV(MAX2769_Q0_8_PIN);  
   \   0000C2   F2C080002402 BIC.B   #0x80, &0x224
    112              
    113              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_1_PIN);      
   \   0000C8   D2C32502     BIC.B   #0x1, &0x225
    114              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_2_PIN);      
   \   0000CC   E2C32502     BIC.B   #0x2, &0x225
    115              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_3_PIN);      
   \   0000D0   E2C22502     BIC.B   #0x4, &0x225
    116              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_4_PIN);      
   \   0000D4   F2C22502     BIC.B   #0x8, &0x225
    117              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_5_PIN);      
   \   0000D8   F2C010002502 BIC.B   #0x10, &0x225
    118              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_6_PIN);      
   \   0000DE   F2C020002502 BIC.B   #0x20, &0x225
    119              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_7_PIN);      
   \   0000E4   F2C040002502 BIC.B   #0x40, &0x225
    120              MAX2769_Q1_PORT(DIR) &= ~BV(MAX2769_Q1_8_PIN);      
   \   0000EA   F2C080002502 BIC.B   #0x80, &0x225
    121              
    122              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_1_PIN);      
   \   0000F0   D2C34402     BIC.B   #0x1, &0x244
    123              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_2_PIN);      
   \   0000F4   E2C34402     BIC.B   #0x2, &0x244
    124              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_3_PIN);      
   \   0000F8   E2C24402     BIC.B   #0x4, &0x244
    125              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_4_PIN);      
   \   0000FC   F2C24402     BIC.B   #0x8, &0x244
    126              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_5_PIN);      
   \   000100   F2C010004402 BIC.B   #0x10, &0x244
    127              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_6_PIN);      
   \   000106   F2C020004402 BIC.B   #0x20, &0x244
    128              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_7_PIN);      
   \   00010C   F2C040004402 BIC.B   #0x40, &0x244
    129              MAX2769_I0_PORT(DIR) &= ~BV(MAX2769_I0_8_PIN);  
   \   000112   F2C080004402 BIC.B   #0x80, &0x244
    130              
    131              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_1_PIN);      
   \   000118   D2C34502     BIC.B   #0x1, &0x245
    132              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_2_PIN);      
   \   00011C   E2C34502     BIC.B   #0x2, &0x245
    133              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_3_PIN);      
   \   000120   E2C24502     BIC.B   #0x4, &0x245
    134              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_4_PIN);      
   \   000124   F2C24502     BIC.B   #0x8, &0x245
    135              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_5_PIN);      
   \   000128   F2C010004502 BIC.B   #0x10, &0x245
    136              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_6_PIN);      
   \   00012E   F2C020004502 BIC.B   #0x20, &0x245
    137              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_7_PIN);      
   \   000134   F2C040004502 BIC.B   #0x40, &0x245
    138              MAX2769_I1_PORT(DIR) &= ~BV(MAX2769_I1_8_PIN);
   \   00013A   F2C080004502 BIC.B   #0x80, &0x245
    139          }
   \   000140   1001         RETA
   \   000142                REQUIRE _A_PBOUT_L
   \   000142                REQUIRE _A_PCOUT_L
   \   000142                REQUIRE _A_PBDIR_L
   \   000142                REQUIRE _A_PCDIR_L
    140          
    141          /*----------------------------------------------------------------------------*/
    142          /**
    143          @brief    Initializing GPS control pins
    144          
    145          @return   void 
    146          
    147          @param    void
    148          */

   \                                 In  segment CODE, align 2
    149          void SYS_GPS_InitControlIO(void)
   \                     SYS_GPS_InitControlIO:
    150          {                
    151              // MAX2769 is in operation
    152              MAX2769_SHDN_N_PORT(OUT)    |=  BV(MAX2769_SHDN_N_PIN);    
   \   000000   E2D38202     BIS.B   #0x2, &0x282
    153              MAX2769_SHDN_N_PORT(DIR)    |=  BV(MAX2769_SHDN_N_PIN);    
   \   000004   E2D38402     BIS.B   #0x2, &0x284
    154              
    155              // MAX2769 is in operation
    156              MAX2769_IDLE_N_PORT(OUT)    |=  BV(MAX2769_IDLE_N_PIN);            
   \   000008   F2D010008202 BIS.B   #0x10, &0x282
    157              MAX2769_IDLE_N_PORT(DIR)    |=  BV(MAX2769_IDLE_N_PIN);    
   \   00000E   F2D010008402 BIS.B   #0x10, &0x284
    158          }
   \   000014   1001         RETA
   \   000016                REQUIRE _A_PEOUT_L
   \   000016                REQUIRE _A_PEDIR_L
    159          
    160          /*----------------------------------------------------------------------------*/
    161          /**
    162          @brief      Initializing GPS control pins
    163          
    164          @return     void 
    165          
    166          @param      void
    167          */

   \                                 In  segment CODE, align 2
    168          void SYS_GPS_InitProgramIO(void)
   \                     SYS_GPS_InitProgramIO:
    169          {
    170              // CLEON uses default device state 2 (PGM:1, CS:0, SCLK:0, SDATA:1)
    171              // - IF: 4092000 Hz
    172              // - Sampling rate: 16368 samples/sec
    173              // - CMOS level I0 and I1
    174            
    175              // PGM pin is set to high
    176              MAX2769_PGM_EN_N_PORT(OUT)  |=  BV(MAX2769_PGM_EN_N_PIN);    
   \   000000   F2D28202     BIS.B   #0x8, &0x282
    177              MAX2769_PGM_EN_N_PORT(DIR)  |=  BV(MAX2769_PGM_EN_N_PIN);    
   \   000004   F2D28402     BIS.B   #0x8, &0x284
    178              
    179              // CS pin is set to low
    180              MAX2769_PGM_CS_N_PORT(OUT)  &= ~BV(MAX2769_PGM_CS_N_PIN);    
   \   000008   E2C28202     BIC.B   #0x4, &0x282
    181              MAX2769_PGM_CS_N_PORT(DIR)  |=  BV(MAX2769_PGM_CS_N_PIN);    
   \   00000C   E2D28402     BIS.B   #0x4, &0x284
    182              
    183              // SCLK pin is set to low
    184              MAX2769_PGM_SCLK_PORT(OUT)  &= ~BV(MAX2769_PGM_SCLK_PIN);        
   \   000010   F2C20302     BIC.B   #0x8, &0x203
    185              MAX2769_PGM_SCLK_PORT(DIR)  |=  BV(MAX2769_PGM_SCLK_PIN);    
   \   000014   F2D20502     BIS.B   #0x8, &0x205
    186              
    187              // SDATA pin is set to high
    188              MAX2769_PGM_SDATA_PORT(OUT) |=  BV(MAX2769_PGM_SDATA_PIN);      
   \   000018   E2D20302     BIS.B   #0x4, &0x203
    189              MAX2769_PGM_SDATA_PORT(DIR) |=  BV(MAX2769_PGM_SDATA_PIN);  
   \   00001C   E2D20502     BIS.B   #0x4, &0x205
    190          }
   \   000020   1001         RETA
   \   000022                REQUIRE _A_PEOUT_L
   \   000022                REQUIRE _A_PEDIR_L
   \   000022                REQUIRE _A_PAOUT_L
   \   000022                REQUIRE _A_PADIR_L
    191          
    192          /*----------------------------------------------------------------------------*/
    193          /**
    194          @brief    Starting GPS operation
    195          
    196          @return   void 
    197          
    198          @param    void
    199          */

   \                                 In  segment CODE, align 2
    200          void SYS_GPS_StartOperation(void)
   \                     SYS_GPS_StartOperation:
    201          {
    202              // LDO for GPS is turned on
    203              GPS_PWR_SHDN_N_HIGH();
   \   000000   D2D38202     BIS.B   #0x1, &0x282
    204          }
   \   000004   1001         RETA
   \   000006                REQUIRE _A_PEOUT_L
    205          
    206          /*----------------------------------------------------------------------------*/
    207          /**
    208          @brief    Starting GPS operation
    209          
    210          @return   void 
    211          
    212          @param    void
    213          */

   \                                 In  segment CODE, align 2
    214          void SYS_GPS_StopOperation(void)
   \                     SYS_GPS_StopOperation:
    215          {
    216              // LDO for GPS is in shutdown mode
    217              GPS_PWR_SHDN_N_LOW();
   \   000000   D2C38202     BIC.B   #0x1, &0x282
    218          }
   \   000004   1001         RETA
   \   000006                REQUIRE _A_PEOUT_L
    219          
    220          /*----------------------------------------------------------------------------*/
    221          /**
    222          @brief    Test if GPS is initalized properly
    223          
    224          @return   void 
    225          
    226          @param    uiDelay - time for GPS to settle down (in milliseconds)
    227          */

   \                                 In  segment CODE, align 2
    228          bool SYS_GPS_TestGPS(unsigned int uiDelay)
   \                     SYS_GPS_TestGPS:
    229          {
   \   000000   3B14         PUSHM.A #0x4, R11
   \   000002   0A4C         MOV.W   R12, R10
    230              unsigned int uiTestCountFor0xFF = 0;
   \   000004   0B43         MOV.W   #0x0, R11
    231              unsigned int uiTestCountFor0x00 = 0;
   \   000006   0843         MOV.W   #0x0, R8
    232              
    233              // Start GPS operation
    234              SYS_GPS_StartOperation();
   \   000008   ........     CALLA   #SYS_GPS_StartOperation
    235              
    236              // Allow GPS time to settle
    237              SYS_GPS_TimingDealy(uiDelay);
   \   00000C   0F43         MOV.W   #0x0, R15
   \                     ??SYS_GPS_TestGPS_0:
   \   00000E   0F9A         CMP.W   R10, R15
   \   000010   072C         JC      ??SYS_GPS_TestGPS_3
   \   000012                ////////////// Start of 12000 cycles delay.
   \   000012   0343         NOP
   \   000014   3E409E0F     MOV.W   #0xf9e, R14
   \                     ??SYS_GPS_TestGPS_10:
   \   000018   3E53         ADD.W   #0xffff, R14
   \   00001A   FE2F         JC      ??SYS_GPS_TestGPS_10
   \   00001C                ////////////// End of delay code.
   \   00001C   1F53         ADD.W   #0x1, R15
   \   00001E   F73F         JMP     ??SYS_GPS_TestGPS_0
    238              
    239              // Start DMA transfer
    240              DMA0CTL |= DMAEN;  
   \                     ??SYS_GPS_TestGPS_3:
   \   000020   B2D010001005 BIS.W   #0x10, &0x510
    241              
    242              // Wait until DMA transfer completed
    243              while((DMA0CTL & DMAIFG) != DMAIFG);
   \                     ??SYS_GPS_TestGPS_1:
   \   000026   B2B21005     BIT.W   #0x8, &0x510
   \   00002A   FD2B         JNC     ??SYS_GPS_TestGPS_1
    244              DMA0CTL &= ~DMAIFG;
   \   00002C   B2C21005     BIC.W   #0x8, &0x510
    245           
    246              // Count the number of '0xFF' and '0x00'
    247              for(int i = 0 ; i < SIZE_OF_GPS_DATA_CHUNK_IN_BYTE ; i++ ){
   \   000030   0F43         MOV.W   #0x0, R15
   \                     ??SYS_GPS_TestGPS_2:
   \   000032   3F90F81F     CMP.W   #0x1ff8, R15
   \   000036   0F34         JGE     ??SYS_GPS_TestGPS_4
    248                  if(uniCLEONGPSData.ucSignal[i] == 0xFF){
   \   000038   0E4F         MOV.W   R15, R14
   \   00003A   ....FE93.... CMPX.B  #0xff, uniCLEONGPSData(R14)
   \   000040   0220         JNE     ??SYS_GPS_TestGPS_5
    249                      uiTestCountFor0xFF++;
   \   000042   1B53         ADD.W   #0x1, R11
   \   000044   063C         JMP     ??SYS_GPS_TestGPS_6
    250                  }else if(uniCLEONGPSData.ucSignal[i] == 0x00){
   \                     ??SYS_GPS_TestGPS_5:
   \   000046   0E4F         MOV.W   R15, R14
   \   000048   ....CE93.... CMPX.B  #0x0, uniCLEONGPSData(R14)
   \   00004E   0120         JNE     ??SYS_GPS_TestGPS_6
    251                      uiTestCountFor0x00++;
   \   000050   1853         ADD.W   #0x1, R8
    252                  }
    253              }
   \                     ??SYS_GPS_TestGPS_6:
   \   000052   1F53         ADD.W   #0x1, R15
   \   000054   EE3F         JMP     ??SYS_GPS_TestGPS_2
    254              
    255              // Stop GPS operation
    256              SYS_GPS_StopOperation();
   \                     ??SYS_GPS_TestGPS_4:
   \   000056   ........     CALLA   #SYS_GPS_StopOperation
    257              
    258              // If number of '0xFF' or '0x00' exceeds half or total sampled signal, regards GPS chip is not functional
    259              // (number of '0xFF' or '0x00' cannot exceed half of captured GPS signal due to signal's physical nature)
    260              if((uiTestCountFor0xFF > (SIZE_OF_GPS_DATA_CHUNK_IN_BYTE/2))||(uiTestCountFor0x00 > (SIZE_OF_GPS_DATA_CHUNK_IN_BYTE/2))){
   \   00005A   3B90FD0F     CMP.W   #0xffd, R11
   \   00005E   032C         JC      ??SYS_GPS_TestGPS_7
   \   000060   3890FD0F     CMP.W   #0xffd, R8
   \   000064   0228         JNC     ??SYS_GPS_TestGPS_8
    261                  return _FAIL_;
   \                     ??SYS_GPS_TestGPS_7:
   \   000066   4C43         MOV.B   #0x0, R12
   \   000068   013C         JMP     ??SYS_GPS_TestGPS_9
    262              }else{
    263                  return _SUCCESS_;
   \                     ??SYS_GPS_TestGPS_8:
   \   00006A   5C43         MOV.B   #0x1, R12
   \                     ??SYS_GPS_TestGPS_9:
   \   00006C   3816         POPM.A  #0x4, R11
   \   00006E   1001         RETA
   \   000070                REQUIRE _A_DMA0CTL_L
    264              }
    265          }
    266              
    267              
    268              
    269              
    270              
    271              
    272              
    273              
    274              
    275              
    276              
    277              
    278              
    279              
    280              
    281              
    282              
    283              
    284              

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   SYS_GPS_Init
        4   -> SYS_GPS_InitControlIO
        4   -> SYS_GPS_InitDataIO
        4   -> SYS_GPS_InitProgramIO
        4   -> SYS_GPS_StopOperation
      4   SYS_GPS_InitControlIO
      4   SYS_GPS_InitDataIO
      4   SYS_GPS_InitProgramIO
      4   SYS_GPS_StartOperation
      4   SYS_GPS_StopOperation
     20   SYS_GPS_TestGPS
       20   -> SYS_GPS_StartOperation
       20   -> SYS_GPS_StopOperation


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      16  SYS_GPS_Init
      22  SYS_GPS_InitControlIO
     322  SYS_GPS_InitDataIO
      34  SYS_GPS_InitProgramIO
       6  SYS_GPS_StartOperation
       6  SYS_GPS_StopOperation
     112  SYS_GPS_TestGPS
       2  _A_DMA0CTL_L
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PBDIR_L
       2  _A_PBOUT_L
       2  _A_PCDIR_L
       2  _A_PCOUT_L
       2  _A_PEDIR_L
       2  _A_PEOUT_L

 
 518 bytes in segment CODE
  18 bytes in segment DATA16_AN
 
 518 bytes of CODE memory
   0 bytes of DATA memory (+ 18 bytes shared)

Errors: none
Warnings: none
