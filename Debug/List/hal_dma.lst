###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.51.2.50607/W32 for MSP430       20/Feb/2013  20:57:37 #
# Copyright 1996-2012 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  64                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430X                                                    #
#    __data_model  =  large                                                   #
#    Source file   =  C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring   #
#                     2013\3_cleon\3_software\cleon\hal\hal_dma.c             #
#    Command line  =  "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\hal\hal_dma.c" -lC        #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\Debug\List\" -la          #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\Debug\List\" -o           #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\Debug\Obj\" --no_cse      #
#                     --no_unroll --no_inline --no_code_motion --no_tbaa      #
#                     --debug -D__MSP430F5338__ -e --double=64 --dlib_config  #
#                     "C:\Program Files (x86)\IAR Systems\Embedded Workbench  #
#                     6.4\430\LIB\DLIB\dl430xldn.h" -I                        #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\intro\" -I                #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\sys\" -I                  #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\hal\" -I                  #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\hal\rtclib\" -I           #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\platform\" -I             #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\fs\" -I                   #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\fs\FatFs\" -I             #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\app\" -I                  #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\" --core=430X             #
#                     --data_model=large -On --multiplier=32                  #
#                     --multiplier_location=4C0 --hw_workaround=CPU40         #
#                     --hw_workaround=CPU42                                   #
#    List file     =  C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring   #
#                     2013\3_cleon\3_software\cleon\Debug\List\hal_dma.lst    #
#    Object file   =  C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring   #
#                     2013\3_cleon\3_software\cleon\Debug\Obj\hal_dma.r43     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring 2013\3_cleon\3_software\cleon\hal\hal_dma.c
      1          /**
      2          @file       hal_dma.c
      3          
      4          @brief      DMA configuration
      5          */
      6          
      7          #include "cleon_conf.h"
      8          #include "app_define.h"
      9          #include "sys_define.h"

   \                                 In  segment DATA16_AN, at 0x500
   \   union <unnamed> __data16 _A_DMACTL0_L
   \                     _A_DMACTL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x508
   \   union <unnamed> __data16 _A_DMACTL4_L
   \                     _A_DMACTL4_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x50e
   \   union <unnamed> __data16 _A_DMAIV_L
   \                     _A_DMAIV_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x510
   \   union <unnamed> __data16 _A_DMA0CTL_L
   \                     _A_DMA0CTL_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x512
   \   union <unnamed> __data16 _A_DMA0SA_L
   \                     _A_DMA0SA_L:
   \   000000                DS8 4

   \                                 In  segment DATA16_AN, at 0x516
   \   union <unnamed> __data16 _A_DMA0DA_L
   \                     _A_DMA0DA_L:
   \   000000                DS8 4

   \                                 In  segment DATA16_AN, at 0x51a
   \   unsigned short volatile __data16 DMA0SZ
   \                     DMA0SZ:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> __data16 _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> __data16 _A_PASEL_L
   \                     _A_PASEL_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x1c0
   \   union <unnamed> __data16 _A_PMAPKEYID_L
   \                     _A_PMAPKEYID_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x1d0
   \   union <unnamed> __data16 _A_P2MAP01_L
   \                     _A_P2MAP01_L:
   \   000000                DS8 2
     10          #include "hal_define.h"
     11          #include "fs_define.h"
     12          
     13          // CLEON data structure
     14          extern cleon_header_u      uniCLEONHeader;
     15          extern cleon_gps_data_u    uniCLEONGPSData;
     16          extern cleon_sensor_data_u uniCLEONSensorData;
     17          
     18          // Flags

   \                                 In  segment DATA20_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero20
     19          bool bFLAG_DMATransferCompleted = _CLEAR_;
   \                     bFLAG_DMATransferCompleted:
   \   000000                DS8 1
     20          
     21          /*----------------------------------------------------------------------------*/
     22          /**
     23          @brief    Initializing DMA
     24          
     25          @return   void 
     26          
     27          @param    void
     28          */

   \                                 In  segment CODE, align 2
     29          void HAL_DMA_Init(void)
   \                     HAL_DMA_Init:
     30          { 
     31              // External DMA trigger is mapped to P2.1
     32              MAX2769_EXT_DMA_TRIG_PORT(SEL) |=  BV(MAX2769_EXT_DMA_TRIG_PIN);
   \   000000   E2D30B02     BIS.B   #0x2, &0x20b
     33              MAX2769_EXT_DMA_TRIG_PORT(DIR) &= ~BV(MAX2769_EXT_DMA_TRIG_PIN);
   \   000004   E2C30502     BIC.B   #0x2, &0x205
     34            
     35              // Port mapping for P2.1
     36              PMAPKEYID = PMAPKEY;
   \   000008   B240522DC001 MOV.W   #0x2d52, &0x1c0
     37              // P2.1 is mapped to external DMA trigger
     38              P2MAP1    = 0x02;
   \   00000E   E243D101     MOV.B   #0x2, &0x1d1
     39              
     40              // Set external input as DMA trigger
     41              DMACTL0   = DMA0TSEL_31;
   \   000012   B2401F000005 MOV.W   #0x1f, &0x500
     42              
     43              // Read-modify-write disable
     44              DMACTL4   =  DMARMWDIS;
   \   000018   A2420805     MOV.W   #0x4, &0x508
     45              DMA0CTL  &= ~DMAIFG;
   \   00001C   B2C21005     BIC.W   #0x8, &0x510
     46              
     47              // DMA destination address will be incremental while DMA source address won't be changed
     48              DMA0CTL = DMADSTINCR_3;
   \   000020   B240000C1005 MOV.W   #0xc00, &0x510
     49              
     50              // Enabling DMA transfer till the size of 'SIZE_OF_GPS_DATA_CHUNK_IN_WORDS' reached
     51              DMA0SZ = SIZE_OF_GPS_DATA_CHUNK_IN_BYTE / 2;
   \   000026   B240FC0F1A05 MOV.W   #0xffc, &0x51a
     52              
     53              // Set DMA source address to base address of P5IN (0x0240)
     54              // Because P5IN and P6IN are adjuscent registers with 1 byte offset, 
     55              // P5IN and P6IN will be transferred at a time if accessed with length of word (16 bit)
     56              __data16_write_addr((unsigned short) &DMA0SA,(unsigned long) 0x0240);
   \   00002C   0018F2404002 MOVX.A  #0x240, &0x512
   \            1205        
     57              
     58              // DMA destination address setting : address of 'GPSData' structure
     59              __data16_write_addr((unsigned short) &DMA0DA,(unsigned long) &uniCLEONGPSData);
   \   000034   ....F240.... MOVX.A  #uniCLEONGPSData, &0x516
   \            1605        
     60              
     61              // Enabling DMA interrupt 
     62              DMA0CTL |= DMAIE;    
   \   00003C   A2D21005     BIS.W   #0x4, &0x510
     63          }
   \   000040   1001         RETA
   \   000042                REQUIRE _A_PASEL_L
   \   000042                REQUIRE _A_PADIR_L
   \   000042                REQUIRE _A_PMAPKEYID_L
   \   000042                REQUIRE _A_P2MAP01_L
   \   000042                REQUIRE _A_DMACTL0_L
   \   000042                REQUIRE _A_DMACTL4_L
   \   000042                REQUIRE _A_DMA0CTL_L
   \   000042                REQUIRE DMA0SZ
   \   000042                REQUIRE _A_DMA0SA_L
   \   000042                REQUIRE _A_DMA0DA_L
     64          
     65          //------------------------------------------------------------------------------
     66          // DMA Interrupt Service Routine
     67          //------------------------------------------------------------------------------
     68          #pragma vector=DMA_VECTOR

   \                                 In  segment ISR_CODE, align 2
     69          __interrupt void DMA_VECTOR_ISR(void)
   \                     DMA_VECTOR_ISR:
     70          {
   \   000000   0F14         PUSHM.A #0x1, R15
     71              switch(__even_in_range(DMAIV,16))
   \   000002   1F420E05     MOV.W   &0x50e, R15
   \   000006   E00F         ADDA    R15, PC
   \                     `?<Jumptable for DMA_VECTOR_ISR>_0`:
   \   000008   0B3C         JMP     ??DMA_VECTOR_ISR_1
   \   00000A   073C         JMP     ??DMA_VECTOR_ISR_2
   \   00000C   093C         JMP     ??DMA_VECTOR_ISR_1
   \   00000E   083C         JMP     ??DMA_VECTOR_ISR_1
   \   000010   073C         JMP     ??DMA_VECTOR_ISR_1
   \   000012   063C         JMP     ??DMA_VECTOR_ISR_1
   \   000014   053C         JMP     ??DMA_VECTOR_ISR_1
   \   000016   043C         JMP     ??DMA_VECTOR_ISR_1
   \   000018   033C         JMP     ??DMA_VECTOR_ISR_1
     72              {
     73                  case 0: break;
     74                  case 2:     
     75                      bFLAG_DMATransferCompleted = _SET_;
   \                     ??DMA_VECTOR_ISR_2:
   \   00001A   ....D243.... MOVX.B  #0x1, &bFLAG_DMATransferCompleted
     76                      break;
     77                  case 4: break;                          
     78                  case 6: break;                          
     79                  case 8: break;                          
     80                  case 10: break;                         
     81                  case 12: break;                         
     82                  case 14: break;                         
     83                  case 16: break;                         
     84                  default: break;
     85              }
     86          }
   \                     ??DMA_VECTOR_ISR_1:
   \   000020   0F16         POPM.A  #0x1, R15
   \   000022   0013         RETI
   \   000024                REQUIRE _A_DMAIV_L

   \                                 In  segment INTVEC, offset 0x64, root
   \                     `??DMA_VECTOR_ISR??INTVEC 100`:
   \   000064   ....         DC16    DMA_VECTOR_ISR
     87          
     88          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
       8  DMA_VECTOR_ISR
       4  HAL_DMA_Init


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ??DMA_VECTOR_ISR??INTVEC 100
       2  DMA0SZ
      36  DMA_VECTOR_ISR
      66  HAL_DMA_Init
       2  _A_DMA0CTL_L
       4  _A_DMA0DA_L
       4  _A_DMA0SA_L
       2  _A_DMACTL0_L
       2  _A_DMACTL4_L
       2  _A_DMAIV_L
       2  _A_P2MAP01_L
       2  _A_PADIR_L
       2  _A_PASEL_L
       2  _A_PMAPKEYID_L
       1  bFLAG_DMATransferCompleted

 
 66 bytes in segment CODE
 26 bytes in segment DATA16_AN
  1 byte  in segment DATA20_Z
  2 bytes in segment INTVEC
 36 bytes in segment ISR_CODE
 
 102 bytes of CODE  memory
   0 bytes of CONST memory (+  2 bytes shared)
   1 byte  of DATA  memory (+ 26 bytes shared)

Errors: none
Warnings: none
