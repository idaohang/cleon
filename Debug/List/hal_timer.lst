###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.51.2.50607/W32 for MSP430       20/Feb/2013  20:57:40 #
# Copyright 1996-2012 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  64                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430X                                                    #
#    __data_model  =  large                                                   #
#    Source file   =  C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring   #
#                     2013\3_cleon\3_software\cleon\hal\hal_timer.c           #
#    Command line  =  "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\hal\hal_timer.c" -lC      #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\Debug\List\" -la          #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\Debug\List\" -o           #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\Debug\Obj\" --no_cse      #
#                     --no_unroll --no_inline --no_code_motion --no_tbaa      #
#                     --debug -D__MSP430F5338__ -e --double=64 --dlib_config  #
#                     "C:\Program Files (x86)\IAR Systems\Embedded Workbench  #
#                     6.4\430\LIB\DLIB\dl430xldn.h" -I                        #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\intro\" -I                #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\sys\" -I                  #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\hal\" -I                  #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\hal\rtclib\" -I           #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\platform\" -I             #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\fs\" -I                   #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\fs\FatFs\" -I             #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\app\" -I                  #
#                     "C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring  #
#                     2013\3_cleon\3_software\cleon\" --core=430X             #
#                     --data_model=large -On --multiplier=32                  #
#                     --multiplier_location=4C0 --hw_workaround=CPU40         #
#                     --hw_workaround=CPU42                                   #
#    List file     =  C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring   #
#                     2013\3_cleon\3_software\cleon\Debug\List\hal_timer.lst  #
#    Object file   =  C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring   #
#                     2013\3_cleon\3_software\cleon\Debug\Obj\hal_timer.r43   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Woosuk\Dropbox\lws\ESL\3. Research\8. Spring 2013\3_cleon\3_software\cleon\hal\hal_timer.c
      1          /**
      2          @file       hal_timer.c
      3          
      4          @brief      timer configuration
      5          */
      6          
      7          #include "cleon_conf.h"
      8          #include "app_define.h"
      9          #include "sys_define.h"

   \                                 In  segment DATA16_AN, at 0x380
   \   unsigned short volatile __data16 TA1CTL
   \                     TA1CTL:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x382
   \   unsigned short volatile __data16 TA1CCTL0
   \                     TA1CCTL0:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x392
   \   unsigned short volatile __data16 TA1CCR0
   \                     TA1CCR0:
   \   000000                DS8 2
     10          #include "hal_define.h"
     11          #include "fs_define.h"
     12          
     13          // Second and millisecond time tick
     14          extern milliseoncd_time_tick_u uniMillisecondTimeTick;
     15          extern seoncd_time_tick_u      uniSecondTimeTick;
     16          
     17          /*----------------------------------------------------------------------------*/
     18          /**
     19          @brief    Initializing timer
     20          
     21          @return   void 
     22          
     23          @param    void
     24          */

   \                                 In  segment CODE, align 2
     25          void HAL_TIMER_Init()
   \                     HAL_TIMER_Init:
     26          { 
     27              HAL_TIMER_TimerA1Init();
   \   000000   ........     BRA     #HAL_TIMER_TimerA1Init
     28          }
     29          
     30          /*----------------------------------------------------------------------------*/
     31          /**
     32          @brief    Initializing timerA1
     33          
     34          @return   void 
     35          
     36          @param    void
     37          */

   \                                 In  segment CODE, align 2
     38          void HAL_TIMER_TimerA1Init()
   \                     HAL_TIMER_TimerA1Init:
     39          { 
     40              TA1CCTL0 = CCIE;                            // CCR0 toggle mode
   \   000000   B24010008203 MOV.W   #0x10, &0x382
     41              TA1CCR0  = 12000;                           // Set it to 12000 to generate 1ms tick with 12MHz clock source
   \   000006   B240E02E9203 MOV.W   #0x2ee0, &0x392
     42              TA1CTL   = TASSEL_2 + MC_1 + TACLR;         // SMCLK, up mode, clear TAR
   \   00000C   B24014028003 MOV.W   #0x214, &0x380
     43          }
   \   000012   1001         RETA
   \   000014                REQUIRE TA1CCTL0
   \   000014                REQUIRE TA1CCR0
   \   000014                REQUIRE TA1CTL
     44          
     45          //------------------------------------------------------------------------------
     46          // TIMER1_A0 Interrupt Service Routine
     47          //------------------------------------------------------------------------------
     48          #pragma vector=TIMER1_A0_VECTOR

   \                                 In  segment ISR_CODE, align 2
     49          __interrupt void TIMER1_A0_VECTOR_ISR (void)
   \                     TIMER1_A0_VECTOR_ISR:
     50          {   
     51               uniMillisecondTimeTick.ullMillisecondTimeTick += 10000;
   \   000000   ....B2501027 ADDX.W  #0x2710, &uniMillisecondTimeTick
   \            ....        
   \   000008   ....8263.... ADDCX.W #0x0, &uniMillisecondTimeTick + 2
   \   00000E   ....8263.... ADDCX.W #0x0, &uniMillisecondTimeTick + 4
   \   000014   ....8263.... ADDCX.W #0x0, &uniMillisecondTimeTick + 6
     52          }
   \   00001A   0013         RETI

   \                                 In  segment INTVEC, offset 0x62, root
   \                     `??TIMER1_A0_VECTOR_ISR??INTVEC 98`:
   \   000062   ....         DC16    TIMER1_A0_VECTOR_ISR

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
       4  HAL_TIMER_Init
            4 -> HAL_TIMER_TimerA1Init
       4  HAL_TIMER_TimerA1Init
       4  TIMER1_A0_VECTOR_ISR


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ??TIMER1_A0_VECTOR_ISR??INTVEC 98
       4  HAL_TIMER_Init
      20  HAL_TIMER_TimerA1Init
       2  TA1CCR0
       2  TA1CCTL0
       2  TA1CTL
      28  TIMER1_A0_VECTOR_ISR

 
 24 bytes in segment CODE
  6 bytes in segment DATA16_AN
  2 bytes in segment INTVEC
 28 bytes in segment ISR_CODE
 
 52 bytes of CODE  memory
  0 bytes of CONST memory (+ 2 bytes shared)
  0 bytes of DATA  memory (+ 6 bytes shared)

Errors: none
Warnings: none
